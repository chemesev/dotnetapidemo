version: 2
jobs:
  build:
    working_directory: /dotnetapidemo
    docker:
      - image: microsoft/dotnet:1-sdk
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
      - checkout
      - run: dotnet restore
#      - run: dotnet ef database update
      - run: dotnet build      
      - run: dotnet publish -o out
      - setup_remote_docker
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.05.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose


      #Integration Tests
      # - run:
      #    name: Start container and verify it's working
      #    command: |
      #      set -x
      #       docker-compose -f Automation/docker-compose.yml up -d
      #      docker run --network container:dotnetapidemo \
      #        appropriate/curl --retry 10 --retry-delay 1 --retry-connrefused http://localhost:5000/api/tasks
      - run:
          name: Integration Tests
          command: |
            set -x
            chmod +x Automation/run_tests.sh
            echo "Running Integration Tests..."
            ./Automation/run_tests.sh

      #build and push Docker image
      - run:
          name: Build Docker Image
          command: |
            TAG=$CIRCLE_USERNAME/$CIRCLE_PROJECT_REPONAME:0.1.$CIRCLE_BUILD_NUM
            LATEST=$CIRCLE_USERNAME/$CIRCLE_PROJECT_REPONAME:latest
            docker build -t $TAG .   
            docker tag $TAG  $LATEST   
            docker login -e $DOCKER_USER -u $CIRCLE_USERNAME -p $DOCKER_PASS         
            docker push $TAG
            docker push $LATEST
